CREATE OR REPLACE PROCEDURE Insert_Progetto
(
    IN tipologia VARCHAR(30),
    IN codpm CHAR(16),
    IN descrizione VARCHAR(200)
)
AS
$$
BEGIN
    INSERT INTO PROGETTO (CodP, Tipologia, Descrizione)
	VALUES (0, tipologia, descrizione);

    UPDATE PARTECIPANTE
    SET CodF = codpm
    WHERE CodP = new_prog AND Ruolo ILIKE 'Project Manager';
END;
$$
LANGUAGE plpgsql;


CREATE OR REPLACE PROCEDURE Insert_Sala
(
    IN città VARCHAR(30),
    IN provincia CHAR(2),
    IN indirizzo VARCHAR(50),
    IN numero_civico INTEGER,
    IN num_posti INTEGER
)
AS
$$
BEGIN
    INSERT INTO SALA (CodSala, Città, Provincia, Indirizzo, NumeroCivico, NumPosti)
    VALUES (0, città, provincia, indirizzo, numero_civico, num_posti);
END;
$$
LANGUAGE plpgsql;


CREATE OR REPLACE PROCEDURE Insert_MeetingF
(
    IN progetto INTEGER,
    IN data DATE,
    IN ora_i TIME,
    IN ora_f TIME,
    IN sala INT
)
AS
$$
BEGIN
    INSERT INTO MEETINGF (CodMF, CodP, Data, OraI, OraF, CodSala)
    VALUES (0, progetto, data, ora_i, ora_f, sala);
END;
$$
LANGUAGE plpgsql;


CREATE OR REPLACE PROCEDURE Insert_MeetingT
(
    IN progetto INTEGER,
    IN data DATE,
    IN ora_i TIME,
    IN ora_f TIME,
    IN piattaforma VARCHAR(30),
    IN num_limite INTEGER
)
AS
$$
BEGIN
    INSERT INTO MEETINGT (CodMT, CodP, Data, OraI, OraF, Piattaforma, NumLimite)
    VALUES (0, progetto, data, ora_i, ora_f, piattaforma, num_limite);
END;
$$
LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION get_Salario_Medio()
RETURNS REAL
AS
$$
DECLARE
	ret REAL;
BEGIN
    ret = (SELECT AVG(D.Salario)
           FROM DIPENDENTE AS D);
		   
	RETURN ret;
END
$$
LANGUAGE plpgsql;